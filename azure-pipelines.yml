# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include:
      - episode_5
  paths:
    exclude:
      - .github

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
  # - stage: Policy
  #   jobs:
  #     - job: SetPolicy
  #       steps:
  #       - task: AzurePowerShell@5
  #         inputs:
  #           azureSubscription: 'ca-zdeptawa-demo-test(d7e02429-9aef-419e-b1e3-a9ca66b40864)'
  #           ScriptType: 'FilePath'
  #           ScriptPath: 'Infrastructure/taskSetPolicy.ps1'
  #           azurePowerShellVersion: 'LatestVersion'

  - stage: PrepareDesiredStateConfiguration
    jobs:
      - job: BuildAndPublishDSC
        steps:
        - task: AzurePowerShell@5
          inputs:
            azureSubscription: 'ca-zdeptawa-demo-test(d7e02429-9aef-419e-b1e3-a9ca66b40864)'
            ScriptType: 'FilePath'
            ScriptPath: 'Infrastructure/taskBuildDsc.ps1'
            azurePowerShellVersion: 'LatestVersion'

  - stage: PrepareDevEnvironment
    dependsOn: PrepareDesiredStateConfiguration
    jobs:
    - job: BuildResourceGroup     
      steps:
      - task: AzureResourceGroupDeployment@2
        inputs: 
          azureSubscription: 'ca-zdeptawa-demo-test(d7e02429-9aef-419e-b1e3-a9ca66b40864)'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'MercuryHealth-dev'
          location: 'East US 2'
          templateLocation: 'URL of the file'
          csmFileLink: 'https://raw.githubusercontent.com/zdeptawa/OnPremToTheCloud/episode_5/Infrastructure/ApplicationRG.json'
          overrideParameters: '-dscBlobStorageUri $(dscBlobStorageUri) -azureDevOpsToken $(azureDevOpsToken) -domainNameLabel $(domainNameLabel) -vmOsDiskStorageName $(vmOsDiskStorageName) -vmname $(vmname) -username $(username) -password $(password) -azureDevOpsEnvironmentName $(azureDevOpsEnvironmentName) -azureDevOpsProject $(azureDevOpsProject) -azureDevOpsUrl $(azureDevOpsUrl)'
          deploymentMode: 'Complete'

  - stage: PrepareDevApplication
    dependsOn: PrepareDevEnvironment
    jobs:
    - job: Build
      steps:
      - task: NuGetToolInstaller@1
      - task: NuGetCommand@2
        inputs:
          restoreSolution: '$(solution)'
      - task: VSBuild@1
        inputs:
          solution: '$(solution)'
          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(build.artifactStagingDirectory)'
          Contents: '**/MercuryHealth.Web.zip'
          TargetFolder: '$(build.artifactStagingDirectory)/artifacts'
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: '**/*.dacpac'
          flattenFolders: true
          TargetFolder: '$(build.artifactStagingDirectory)/artifacts'
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(build.artifactStagingDirectory)/artifacts'
          artifact: 'artifacts'
          publishLocation: 'pipeline'

  - stage: DeployDevApplication
    dependsOn: PrepareApplication
    variables:
      - name: websiteName
        value: 'Mercury Health'
      - name: databaseName
        value: MercuryHealthDB
    jobs:
      - deployment: DeployTestApplication
        environment: 
          name: Development
          resourceType: VirtualMachine
          tags: mercuryweb
        strategy:
          runOnce:
            deploy:
              steps:
              - template: deploy-template.yml
            